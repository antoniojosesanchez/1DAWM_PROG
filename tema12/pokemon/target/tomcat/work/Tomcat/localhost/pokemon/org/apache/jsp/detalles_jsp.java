/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.47
 * Generated at: 2024-05-09 12:39:38 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import clases.Conexion;
import java.sql.Connection;
import java.sql.Statement;
import java.sql.ResultSet;

public final class detalles_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE hmtl>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("    <title>Pokemón</title>\r\n");
      out.write("    <meta charset=\"utf-8\" />\r\n");
      out.write("\r\n");
      out.write("    <style>\r\n");
      out.write("        td { border: solid 1px #000; }\r\n");
      out.write("    </style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("    <h1>Pokemón</h1>\r\n");
      out.write("\r\n");
      out.write("    ");


        // Recuperamos el valor de la clave primaria del pokemón que se
        // nos envía desde el archivo index.jsp en forma de parámetro
        //
        // IMPORTANTE: debemos recordar que el valor de todos los pará-
        // metros se reciben SIEMPRE en formato STRING.
        String codEsp = request.getParameter("codEsp") ;

        // conectamos con el servidor de bases de datos
         Connection conexion = Conexion.getConnection("pokemon") ;

        // creamos una sentencia y la lanzamos
        Statement consulta  = conexion.createStatement() ;
        ResultSet resultado = consulta.executeQuery("SELECT * FROM especie WHERE codEsp = " + codEsp + " ;") ;

        // colocamos el cursor en el primer registro del conjunto de resultados
        // que, en este caso, sólo debe haber devuelto una única fila (registro).
        if (!resultado.next()) {
             out.println("No existe esa especie.") ;
        } else {
    
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    <h2>");
      out.print( resultado.getString("nombre") );
      out.write("</h2>\r\n");
      out.write("    <ul type=\"square\">\r\n");
      out.write("        <li>Altura: ");
      out.print( resultado.getString("altura") );
      out.write(" cms.</li>\r\n");
      out.write("        <li>Peso: ");
      out.print( resultado.getString("peso") );
      out.write(" kgs.</li>\r\n");
      out.write("    </ul>\r\n");
      out.write("\r\n");
      out.write("    ");
 

            // buscamos los movimientos asociados al pokemón
            String sql = "SELECT * FROM movimiento M " +
                        "JOIN especie_movimiento EM " +
                        "ON (M.codMov = EM.codMov)  " + 
                        "WHERE EM.codEsp = " + codEsp + " ;" ;

            resultado = consulta.executeQuery(sql) ;

            // mostramos los movimientos
    
      out.write("\r\n");
      out.write("\r\n");
      out.write("        <h3>Movimientos del Pokemón</h3>\r\n");
      out.write("            <table>\r\n");
      out.write("                <thead>\r\n");
      out.write("                    <tr>\r\n");
      out.write("                        <th>Descripción</th>\r\n");
      out.write("                        <th></th>\r\n");
      out.write("                        <th></th>\r\n");
      out.write("                    </tr>\r\n");
      out.write("                </thead>\r\n");
      out.write("                <tbody>\r\n");
      out.write("    ");

            while(resultado.next()) {
                out.println("<tr>") ;
                out.println("<td>" + resultado.getString("descripcion") + "</td>") ;
                out.println("<td><a href=\"editar.jsp?codMov=" +  resultado.getString("codMov") + "\">editar</a></td>") ;
                out.println("<td><a href=\"borrar.jsp?codMov=" +  resultado.getString("codMov") + "\">borrar</a></td>") ;
                out.println("</tr>") ;
            }
    
      out.write("\r\n");
      out.write("                </tbody>\r\n");
      out.write("            </table>\r\n");
      out.write("\r\n");
      out.write("    ");

        } // if línea 41          
    
      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
