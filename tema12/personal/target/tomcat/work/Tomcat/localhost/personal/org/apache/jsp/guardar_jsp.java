/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.47
 * Generated at: 2024-05-23 11:45:41 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import clases.DB;
import java.sql.Connection;
import java.sql.Statement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.io.FileWriter;
import java.io.BufferedWriter;

public final class guardar_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

    String sql  ;
    ResultSet res ; 
    Statement consulta ;

    // 1. establecemos conexión con el servidor de base de datos
    Connection conexion = DB.getDb() ;
    
    // 2. buscamos información del usuario
    sql = "SELECT * FROM usuario WHERE idUsu = " + request.getParameter("idu") + "; " ;
    consulta  = conexion.createStatement()  ;        
    res = consulta.executeQuery(sql) ;

    res.next() ;

    // 3. creamos el nombre del archivo en base al del usuario
    String nombreArchivo = "recordatorios_"+ res.getString("apellidos") + "_" + res.getString("nombre") + ".txt" ;

    // 4. lanzamos la consulta contra la base de datos            
    sql = "SELECT * FROM recordatorio WHERE idUsu = " + request.getParameter("idu") + "; " ;    
    consulta  = conexion.createStatement()  ;        
    res = consulta.executeQuery(sql) ; 

    // 5. creamos archivos para escritura  
    BufferedWriter bw  = new BufferedWriter(new FileWriter(nombreArchivo)) ;

    // 6. volcamos en el archivo de texto las tareas del usuario
    while(res.next()) {

        String titulo      = res.getString("titulo") ;
        String descripcion = res.getString("descripcion") ;
        out.println("Volcando tarea: " + titulo + "<br/>") ;

        bw.write(titulo + ", " + descripcion + "\n") ;
    }

    // 7. cerramos la conexión con la base de datos
    conexion.close () ;

    // 8. cerramos el archivo
    bw.close() ;

    // 9. redirigimos a la pantalla anterior
    response.sendRedirect("main.jsp?idu=" + request.getParameter("idu")) ;


    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
